// Foursquare API Info
const clientId = 
'BP5BUAZAJDNBNPGTD5KR2KH0SAASY5YCXEQDOTZ1RVWYZLKJ';
const clientSecret = 'NXQX3O5EIROTFBFRTZV4DW3AY25330CWLD5ZI0XWVSNS31V3';
const url = 'https://api.foursquare.com/v2/venues/explore?near=';

// OpenWeather Info
const openWeatherKey = '6c3fdc7a51ad1343bcfc47d8f4c589ce';
const weatherUrl = 'https://api.openweathermap.org/data/2.5/weather';

// Page Elements
const $input = $('#city');
const $submit = $('#button');
const $destination = $('#destination');
const $container = $('.container');
const $venueDivs = [$("#venue1"), $("#venue2"), $("#venue3"), $("#venue4")];
const $weatherDiv = $("#weather1");
const weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

// Add AJAX functions here:
const getVenues = async () => {
  const city = $input.val()
  const urlToFetch =`${url}${city}&limit=10&client_id=${clientId}&client_secret=${clientSecret}&v=20211202`;

try{
  const response = await fetch(urlToFetch);
    if(response.ok){
      const jsonResponse = await response.json();
       const venues = jsonResponse.response.groups[0].items.map(item => item.venue);
       console.log(venues);
       return venues;
      
    } throw new Error('Request failed!');
}
catch(error){
  console.log(error)
}

}

const getForecast = async () => {
  const urlToFetch =`${weatherUrl}?&q=${$input.val()}&APPID=${openWeatherKey}`;
  try{
    const response = await fetch(urlToFetch)
      if (response.ok){
        const jsonResponse = await response.json();
        return jsonResponse;
      }
  }
  catch(error)
  {
    console.log(error);
  }
}


// Render functions
const renderVenues = (venues) => {
  $venueDivs.forEach(($venue, index) => {
    // Add your code here:
    const venue = venues[index];
    const venueIcon = venue.categories[0].icon;
    const venueImgSrc = `${venueIcon.prefix}bg_64${venueIcon.suffix}`;
    let venueContent = createVenueHTML(venue.name, venue.location, venueImgSrc);
    $venue.append(venueContent);
  });
  $destination.append(`<h2>${venues[0].location.city}</h2>`);
}

const renderForecast = (day) => {
  // Add your code here:
  const weatherContent = createWeatherHTML(day); 
  $weatherDiv.append(weatherContent);
}

const executeSearch = () => {
  $venueDivs.forEach(venue => venue.empty());
  $weatherDiv.empty();
  $destination.empty();
  $container.css("visibility", "visible");
  getVenues().then((venues) => {
    return renderVenues(venues);
  })
  getForecast().then((forecast) => {
    return renderForecase(forecast);
  });
  return false;
}

$submit.click(executeSearch)